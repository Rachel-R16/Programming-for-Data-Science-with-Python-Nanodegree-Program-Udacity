/*

Query 1

Compare the number of movies rented from both shops according to the number of rentals in each given month.

*/


SELECT
  DATE_PART('month', r.rental_date) AS rental_month,
  DATE_PART('year', r.rental_date) AS rental_year,
  st.store_id AS store_id,
  COUNT(r.rental_id) AS no_of_rentals

FROM rental AS r

JOIN staff AS st
ON r.staff_id = st.staff_id

GROUP BY 1, 2, 3
ORDER BY 1, 2;


/*

Query 2

We want to find out which actor has starred in the most number of movies in the DVDs stored at the rental shops.
Create a query that will diplay the five most repeating actors, and the number of movies they've appeared in.

*/




SELECT 
	actor_name AS actor_name,
	COUNT (*) AS no_of_movies

FROM (SELECT DISTINCT
		f.title AS movie_name,
		CONCAT(a.first_name, ' ', a.last_name) AS actor_name
	
	FROM actor a

	JOIN film_actor fa
	ON fa.actor_id = a.actor_id

	JOIN film f
	ON fa.film_id = f.film_id
	
	ORDER BY 2) AS t1

GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;


/*

Query 3

To understand how much money customers spend on rentals, we can divide them into broad groups based on their average payments.
For example, the divisions are 'High paying customers', 'Low paying customers' and 'Medium paying customers'.
Find the number of customers that fall into each of these categories.

*/


WITH table1 AS (

	WITH table2 AS (

	SELECT 
		CONCAT(c.first_name, ' ', c.last_name) AS full_name, 
    		AVG(p.amount) AS avg_payment
    		
		FROM payment p
    	
		JOIN customer c
    		ON c.customer_id = p.customer_id
    	
		GROUP BY 1
    		ORDER BY 2)
    
SELECT 
	full_name,  
	CASE 
		WHEN avg_payment > 4.5 
		THEN 'High paying customer'
		WHEN avg_payment < 4.5 AND avg_payment > 3.5
		THEN 'Medium paying customer'
		WHEN avg_payment < 3.5
		THEN 'Low paying customer' 
		END AS customer_payment_level
	
FROM table2
ORDER BY 2)

SELECT 
	customer_payment_level,
	COUNT(*) AS no_of_customers

FROM table1
GROUP BY 1
ORDER BY 1;


/*

Query 4

Create a query that will display the five most popular film category, each of the half yearly, 
and the corresponding count of movies within each combination of film category for each corresponding rental duration category.

*/


WITH table1 AS (
SELECT 
	c.name AS category_name,
  	f.rental_duration,
   	NTILE(2) OVER (ORDER BY f.rental_duration) AS standard_half_yearly

FROM category AS c

JOIN film_category AS fc
ON c.category_id = fc.category_id

JOIN film AS f
ON fc.film_id = f.film_id),

table2 AS (
SELECT 
	c.name AS category_name, 
	COUNT(r.rental_id)

FROM category AS c
		
JOIN film_category AS fc
ON fc.category_id = c.category_id
		
JOIN film AS f
ON f.film_id = fc.film_id
		
JOIN inventory AS i
ON i.film_id = f.film_id

JOIN rental AS r
ON i.inventory_id = r.inventory_id
		
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5)

SELECT
  category_name,
  standard_half_yearly,
  COUNT(standard_half_yearly)

FROM table1

WHERE category_name IN (SELECT category_name 
                        FROM table2)
GROUP BY 1, 2
ORDER BY 1, 2;

